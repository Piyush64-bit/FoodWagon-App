// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id          String     @id @default(cuid())
  name        String
  address     String
  cuisine     String
  image       String
  rating      Float      @default(4.0)
  description String?
  phone       String?
  deliveryFee Float      @default(49.0)
  deliveryTime String    @default("30-45 mins")
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  menuItems   MenuItem[]
  orders      Order[]

  @@map("restaurants")
}

model MenuItem {
  id           String      @id @default(cuid())
  name         String
  description  String
  price        Float
  image        String
  category     String
  isVegetarian Boolean     @default(false)
  isAvailable  Boolean     @default(true)
  restaurantId String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  orderItems   OrderItem[]

  @@map("menu_items")
}

model Order {
  id           String      @id @default(cuid())
  userId       String
  restaurantId String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  totalAmount  Float
  status       OrderStatus @default(PENDING)
  deliveryAddress String
  phone        String
  items        OrderItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@map("orders")
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItemId String
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
  price      Float
  createdAt  DateTime @default(now())

  @@map("order_items")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}